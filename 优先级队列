优先级队列默认建立大堆，建小堆需要用到greater<int>函数头文件为#include<functional>
#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<vector>
#include<queue>
#include<functional>//greater比较函数头文件
using namespace std;
int main()
{
	vector<int> v{ 3, 2, 7, 6, 0, 4, 1, 9, 8, 5 };
	priority_queue<int> q1;
	for (auto& e : v)
	{
		q1.push(e);
	}	
	cout << q1.top() << endl;
	
	priority_queue<int, vector<int>, greater<int>> q2(v.begin(),v.end());
	cout << q2.top() << endl;
	system("pause");
	return 0;
}
//TOP K问题
寻找第K大
题目描述
有一个整数数组，请你根据快速排序的思路，找出数组中第K大的数。

给定一个整数数组a,同时给定它的大小n和要找的K(K在1到n之间)，请返回第K大的数，保证答案存在。

测试样例：
[1,3,5,2,2],5,3
返回：2
class Finder {
public:
    int findKth(vector<int> a, int n, int K) {
        priority_queue<int> q(a.begin(),a.end());
        for(int i = 1;i < K;i++)
        {
            q.pop();
        }
        return q.top();
    }
};
