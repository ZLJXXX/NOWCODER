# NOWCODER
题目描述
分别按照二叉树先序，中序和后序打印所有的节点。
示例1
输入
复制
{1,2,3}
输出
复制
[[1,2,3],[2,1,3],[2,3,1]]
/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 * };
 */

class Solution {
public:
    /**
     * 
     * @param root TreeNode类 the root of binary tree
     * @return int整型vector<vector<>>
     */
    void Tree_xianxu(TreeNode* root,vector<int>& a)
    {
        if(root == NULL)
            return;
        a.push_back(root->val);
        Tree_xianxu(root->left, a);
        Tree_xianxu(root->right,a);
    }
     void Tree_zhongxu(TreeNode* root,vector<int>& a)
    {
        if(root == NULL)
            return;
        Tree_zhongxu(root->left, a);
        a.push_back(root->val);
        Tree_zhongxu(root->right,a);
    }
      void Tree_houxu(TreeNode* root,vector<int>& a)
    {
        if(root == NULL)
            return;
        Tree_houxu(root->left, a);
        Tree_houxu(root->right,a);
        a.push_back(root->val);
    }
    vector<vector<int> > threeOrders(TreeNode* root) {
        // write code here
        TreeNode* head = root;
        vector<vector<int>> array;
        vector<int> VV;
        Tree_xianxu(head,VV);
        array.push_back(VV);
        VV.clear();
        Tree_zhongxu(head,VV);
        array.push_back(VV);
        VV.clear();
        Tree_houxu(head,VV);
        array.push_back(VV);
        VV.clear();
        return array;
    }
};
