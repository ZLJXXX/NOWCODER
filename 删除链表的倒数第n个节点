题目描述
给定一个链表，删除链表的倒数第n个节点并返回链表的头指针
例如，
 给出的链表为:1->2->3->4->5, n= 2.
 删除了链表的倒数第n个节点之后,链表变为1->2->3->5.
备注：
题目保证n一定是有效的
请给出请给出时间复杂度为\ O(n) O(n)的算法

示例1
输入
复制
{1,2},2
输出
复制
{2}
/**
 * struct ListNode {
 *	int val;
 *	struct ListNode *next;
 * };
 */

class Solution {
public:
    /**
     * 
     * @param head ListNode类 
     * @param n int整型 
     * @return ListNode类
     */
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        // write code here
        if(head == nullptr)
        {
            return head;
        }
        int count = 0;
        int ret = 0;
        ListNode* cur = head;
        while(cur)
        {
            count++;
            cur = cur->next;
        }
        ret = count - n;
        if(ret == 0)
        {
            return head->next;
        }
        ListNode* prev = head;
        for(int i = 0;i < ret -1;i++)
        {
            prev = prev->next;
        }
        prev->next = prev->next->next;
        return head;
    }
};
